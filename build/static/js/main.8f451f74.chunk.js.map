{"version":3,"sources":["services/ppl.js","components/person.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","deletePerson","name","number","onClick","Notification","message","className","App","props","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","phrase","setPhrase","foundNames","setFoundNames","setMessage","setClassName","peopleToShow","useEffect","personService","value","onChange","event","target","map","obj","console","log","listObj","searchedPhrase","foundObj","i","length","toLowerCase","includes","push","filteredNames","onSubmit","preventDefault","newPersonObject","PersonObject","validateName","includesName","window","confirm","find","changePerson","returnedPerson","setTimeout","catch","error","filter","concat","type","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f451f74.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport default { getAll, create, update, del }","import React from 'react'\r\n\r\nconst Person = ({person, deletePerson}) => {\r\n    return (\r\n      <div>{person.name} {person.number}\r\n      <button onClick={deletePerson}>delete</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Person","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/ppl'\r\nimport Person from './components/person'\r\nimport './index.css'\r\n\r\n\r\nconst includesName = (listObj, name) => {\r\n  for( var i = 0; i < listObj.length; i++){\r\n    if(listObj[i].name === name){\r\n      return true\r\n    }\r\n  }return false\r\n}\r\n\r\nconst filteredNames = (listObj, searchedPhrase) => {\r\n  const foundObj= []\r\n  for( var i = 0; i < listObj.length; i++){\r\n    if((listObj[i].name.toLowerCase().includes(searchedPhrase.toLowerCase()))\r\n    && (searchedPhrase !== \"\")){\r\n      foundObj.push(listObj[i])\r\n    }}\r\n    return (foundObj)\r\n}\r\n\r\nconst Notification = ({message, className}) => {\r\n    if( message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nconst App = (props) => {\r\n\r\n  const [ persons, setPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ phrase, setPhrase] = useState('')\r\n  const [ foundNames, setFoundNames] = useState([])\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ className, setClassName] = useState('notification')\r\n\r\n\r\n  const peopleToShow = phrase === \"\"\r\n    ? persons\r\n    : foundNames\r\n\r\n  const delPerson = (name, id) => {\r\n    if(window.confirm(`Delete ${name}?`)){\r\n      personService\r\n      .del(id)\r\n      setPersons(persons.filter(person => person.id !== id))\r\n    }\r\n\r\n  }\r\n\r\n  const displayPerson = () => peopleToShow.map(person =>\r\n    <Person \r\n      key={person.id}\r\n      person={person}\r\n      deletePerson={() => delPerson(person.name, person.id)}\r\n      />\r\n  )\r\n\r\n  const validateName = (PersonObject) => {\r\n    if(PersonObject.name.length === 0){\r\n      console.log('zero length name')\r\n      return true\r\n    }  \r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const newPersonObject = {\r\n      name: newName,\r\n      id: persons.length + 1,\r\n      number:  newNumber\r\n    }\r\n\r\n    if(validateName(newPersonObject)){\r\n      return\r\n    }\r\n\r\n    if(!includesName(persons, newPersonObject.name)){\r\n      personService\r\n        .create(newPersonObject)\r\n        .then( () => {\r\n          setPersons(persons.concat(newPersonObject))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          setClassName('notification')\r\n          setMessage(`Added ${newPersonObject.name}`)\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n            }, 5000)\r\n        })\r\n        .catch(error => {\r\n          setClassName('error')\r\n          setMessage(`${error.response.data.error}`)\r\n          console.log(error.response)\r\n\r\n          setTimeout(() => {\r\n            setMessage(null)\r\n            }, 5000)\r\n        })\r\n    }else{\r\n      if(window.confirm(`${newPersonObject.name} is already added to phonebook, \r\n      replace the old number with a new one?`)){\r\n      const person = persons.find(person => person.name === newPersonObject.name)\r\n      const changePerson = { ...person, number: newPersonObject.number}\r\n      personService\r\n        .update(person.id, changePerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.map(person => \r\n            person.name !== newPersonObject.name ? person: returnedPerson))\r\n      \r\n      setClassName('notification')\r\n      setMessage(`Upadated ${newPersonObject.name}`)\r\n\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        }, 5000)\r\n      })\r\n      .catch(error => {\r\n        setClassName('error')\r\n        setMessage(`${newPersonObject.name} was already removed from server`)\r\n        setTimeout(() => {\r\n          setMessage(null)\r\n        }, 5000)\r\n        setPersons(persons.filter(person => \r\n          person.name !== newPersonObject.name))\r\n        })\r\n\r\n      setNewName('')\r\n      setNewNumber('')\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    // console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    // console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilter = (event) => {\r\n    setPhrase(event.target.value)\r\n    foundNames.map(obj => console.log(obj.name, obj.number))\r\n    setFoundNames(filteredNames(persons, event.target.value))\r\n  }\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(persons =>\r\n        setPersons(persons))\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>My phonebook</h2>\r\n        <Notification message={message} className={className}/>\r\n\r\n        <div>\r\n          filter shown with: <input value={phrase} onChange={handleFilter}/>\r\n        </div>\r\n\r\n      <h2>add a new</h2>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange} name='newName'/>\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange} name='newNumber'/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n      <h2>Numbers</h2>\r\n      <div>\r\n      {displayPerson()}\r\n      </div>\r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// const persons = [\n//     { name: 'Arto Hellas', number: '040-123456' },\n//     { name: 'Ada Lovelace', number: '39-44-5323523' },\n//     { name: 'Dan Abramov', number: '12-43-234345' },\n//     { name: 'Mary Poppendieck', number: '39-23-6423122' }\n//   ]\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}